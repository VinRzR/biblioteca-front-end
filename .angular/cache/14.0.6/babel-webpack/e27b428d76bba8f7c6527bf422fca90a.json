{"ast":null,"code":"import { Associados } from '../shared/associados';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nexport let FormularioComponentAssociado = /*#__PURE__*/(() => {\n  class FormularioComponentAssociado {\n    constructor(router, formBuilder, http) {\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.http = http;\n    }\n\n    ngOnInit() {\n      this.createForm(new Associados());\n    }\n\n    createForm(associado) {\n      this.formAssociado = this.formBuilder.group({\n        nome: [associado.nome],\n        endereco: [associado.endereco],\n        email: [associado.email],\n        status: [associado.status],\n        senha: [associado.senha]\n      });\n    }\n\n    onSubmit() {\n      this.http.post('https://biblioteca-back-end.herokuapp.com/associados', this.formAssociado.value).subscribe(data => {\n        console.log(data);\n      }); // aqui você pode implementar a logica para fazer seu formulário salvar\n\n      console.log(this.formAssociado.value); // Usar o método reset para limpar os controles na tela\n\n      this.formAssociado.reset(new Associados());\n    }\n\n  }\n\n  FormularioComponentAssociado.ɵfac = function FormularioComponentAssociado_Factory(t) {\n    return new (t || FormularioComponentAssociado)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n\n  FormularioComponentAssociado.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormularioComponentAssociado,\n    selectors: [[\"app-formulario-associado\"]],\n    decls: 28,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"nome\"], [\"type\", \"text\", \"name\", \"nome\", \"id\", \"nome\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"for\", \"tipo\"], [\"name\", \"status\", \"id\", \"status\", \"formControlName\", \"status\", 1, \"form-control\"], [\"value\", \"Grad\"], [\"value\", \"Posgrad\"], [\"value\", \"Prof\"], [\"type\", \"text\", \"name\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"endereco\", \"id\", \"endereco\", \"formControlName\", \"endereco\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"senha\", \"id\", \"senha\", \"formControlName\", \"senha\", 1, \"form-control\"], [\"type\", \"submit\", \"value\", \"Enviar\", 1, \"btn\", \"btn-primary\", \"mt-4\"]],\n    template: function FormularioComponentAssociado_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function FormularioComponentAssociado_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 5)(9, \"option\", 6);\n        i0.ɵɵtext(10, \"Grad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 7);\n        i0.ɵɵtext(12, \"Posgrad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 8);\n        i0.ɵɵtext(14, \"Prof\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 2);\n        i0.ɵɵtext(17, \"E-mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 1)(20, \"label\", 2);\n        i0.ɵɵtext(21, \"Endere\\u00E7o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 1)(24, \"label\", 2);\n        i0.ɵɵtext(25, \"senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 12);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.formAssociado);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return FormularioComponentAssociado;\n})();","map":null,"metadata":{},"sourceType":"module"}