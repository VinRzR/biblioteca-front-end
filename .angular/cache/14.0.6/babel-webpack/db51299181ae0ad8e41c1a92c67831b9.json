{"ast":null,"code":"import { Exemplar } from '../shared/exemplar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nexport let FormularioExemplarComponent = /*#__PURE__*/(() => {\n  class FormularioExemplarComponent {\n    constructor(router, formBuilder, http) {\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.http = http;\n    }\n\n    ngOnInit() {\n      this.createForm(new Exemplar());\n    }\n\n    createForm(exemplar) {\n      this.formExemplar = this.formBuilder.group({\n        numero: [exemplar.numero],\n        isbn: [exemplar.isbn],\n        preco: [exemplar.preco]\n      });\n    }\n\n    onSubmit() {\n      this.http.post('https://biblioteca-back-end.herokuapp.com/exemplars', this.formExemplar.value).subscribe(data => {\n        console.log(data);\n      }); // aqui você pode implementar a logica para fazer seu formulário salvar\n\n      console.log(this.formExemplar.value); // Usar o método reset para limpar os controles na tela\n    }\n\n  }\n\n  FormularioExemplarComponent.ɵfac = function FormularioExemplarComponent_Factory(t) {\n    return new (t || FormularioExemplarComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n\n  FormularioExemplarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormularioExemplarComponent,\n    selectors: [[\"app-formulario-exemplar\"]],\n    decls: 14,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"nome\"], [\"type\", \"number\", \"name\", \"numero\", \"id\", \"numero\", \"formControlName\", \"numero\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"isbn\", \"id\", \"isbn\", \"formControlName\", \"isbn\", 1, \"form-control\"], [\"type\", \"number\", \"step\", \"0.01\", \"name\", \"preco\", \"id\", \"preco\", \"formControlName\", \"preco\", 1, \"form-control\"], [\"type\", \"submit\", \"value\", \"Enviar\", 1, \"btn\", \"btn-primary\", \"mt-4\"]],\n    template: function FormularioExemplarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function FormularioExemplarComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Numero\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 2);\n        i0.ɵɵtext(7, \"ISBN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 2);\n        i0.ɵɵtext(11, \"Pre\\u00E7o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.formExemplar);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return FormularioExemplarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}