{"ast":null,"code":"import { Publicacao } from '../shared/publicacao';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nexport let FormularioPublicacaoComponent = /*#__PURE__*/(() => {\n  class FormularioPublicacaoComponent {\n    constructor(router, formBuilder, http) {\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.http = http;\n    }\n\n    ngOnInit() {\n      this.createForm(new Publicacao());\n    }\n\n    createForm(publicacao) {\n      this.formPublicacao = this.formBuilder.group({\n        isbn: [publicacao.isbn],\n        titulo: [publicacao.titulo],\n        autor: [publicacao.autor],\n        editora: [publicacao.editora]\n      });\n    }\n\n    onSubmit() {\n      this.http.post('https://biblioteca-back-end.herokuapp.com/publicacaos', this.formPublicacao.value).subscribe(data => {\n        console.log(data);\n        alert('publicação cadastrada');\n      }); // aqui você pode implementar a logica para fazer seu formulário salvar\n\n      console.log(this.formPublicacao.value); // Usar o método reset para limpar os controles na tela\n    }\n\n  }\n\n  FormularioPublicacaoComponent.ɵfac = function FormularioPublicacaoComponent_Factory(t) {\n    return new (t || FormularioPublicacaoComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n\n  FormularioPublicacaoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormularioPublicacaoComponent,\n    selectors: [[\"app-formulario-publicacao\"]],\n    decls: 18,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"nome\"], [\"type\", \"text\", \"name\", \"isbn\", \"id\", \"isbn\", \"formControlName\", \"isbn\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"titulo\", \"id\", \"titulo\", \"formControlName\", \"titulo\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"autor\", \"id\", \"autor\", \"formControlName\", \"autor\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"editora\", \"id\", \"editora\", \"formControlName\", \"editora\", 1, \"form-control\"], [\"type\", \"submit\", \"value\", \"Enviar\", 1, \"btn\", \"btn-primary\", \"mt-4\"]],\n    template: function FormularioPublicacaoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function FormularioPublicacaoComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"ISBN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 2);\n        i0.ɵɵtext(7, \"Titulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 2);\n        i0.ɵɵtext(11, \"Autor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 2);\n        i0.ɵɵtext(15, \"Editora\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 7);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.formPublicacao);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return FormularioPublicacaoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}